# file name: arm-gnueabihf.toolchain.cmake
set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSTEM_VERSION 1)
set(CMAKE_SYSTEM_PROCESSOR arm)

set(TEGRA_CROSS_DIR /home/bob/hdd/tegra-cross)
set(LINARO_BIN_DIR gcc-linaro-5.4.1-2017.05-x86_64_aarch64-linux-gnu/bin)

set(COMPILER_DIR ${TEGRA_CROSS_DIR}/${LINARO_BIN_DIR})
set(CMAKE_LINKER ${COMPILER_DIR}/aarch64-linux-gnu-ld)
set(CMAKE_C_COMPILER ${COMPILER_DIR}/aarch64-linux-gnu-gcc)
set(CMAKE_CXX_COMPILER  ${COMPILER_DIR}/aarch64-linux-gnu-g++)
set(ARM_LINUX_SYSROOT ${TEGRA_CROSS_DIR} CACHE PATH "ARM cross compilation system root") # search path for the cross compile toolchain

# where is the target environment 
SET(CMAKE_FIND_ROOT_PATH  ${TEGRA_CROSS_DIR})

# search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

set(CMAKE_CXX_FLAGS           ""                    CACHE STRING "c++ flags")
set(CMAKE_C_FLAGS             ""                    CACHE STRING "c flags")
set(CMAKE_SHARED_LINKER_FLAGS ""                    CACHE STRING "shared linker flags")
set(CMAKE_MODULE_LINKER_FLAGS ""                    CACHE STRING "module linker flags")
set(CMAKE_EXE_LINKER_FLAGS    "-Wl,-z,nocopyreloc"  CACHE STRING "executable linker flags")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ")
set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} ")

set(CMAKE_SHARED_LINKER_FLAGS "-Wl, -Wl,--no-undefined -Wl,--gc-sections -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now ${CMAKE_SHARED_LINKER_FLAGS}")
set(CMAKE_MODULE_LINKER_FLAGS "-Wl, -Wl,--no-undefined -Wl,--gc-sections -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now ${CMAKE_MODULE_LINKER_FLAGS}")
set(CMAKE_EXE_LINKER_FLAGS    "-Wl, -Wl,--no-undefined -Wl,--gc-sections -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now ${CMAKE_EXE_LINKER_FLAGS}")

set(COMPILER_IS_ARM "1")       #flags for the CMakeList.txt
add_definitions(-D_ARM_TEGRA3) # C/C++ preprocessor macro, which will be used in many many files
